#!/usr/bin/env python3

# Import necessary libraries
import rospy
from geometry_msgs.msg import Twist
import time

def move_turtle_in_square():
    rospy.init_node('turtlesim_square_node', anonymous=True)
    
    # Initialize the publisher
    velocity_pub = rospy.Publisher('/turtle1/cmd_vel', Twist, queue_size=10)
    rospy.loginfo("The turtle is ready to draw a square!")

    ########## YOUR CODE GOES HERE ##########
    while not rospy.is_shutdown():
        
        rate = rospy.Rate(1)  # Frequency set to 1 Hz, modify if needed
        
        # Define the Twist message for linear movement
        move_cmd = Twist()
        move_cmd.linear.x = 2.0  # Set linear speed
        velocity_pub.publish(move_cmd)  # Send the command
        time.sleep(2)  # Adjust sleep duration for the turtle to move forward

        # Define the Twist message for angular movement
        turn_cmd = Twist()
        turn_cmd.angular.z = 1.5708  # Set angular speed for 90-degree rotation
        velocity_pub.publish(turn_cmd)  # Send the command
        time.sleep(1)  # Adjust sleep duration for the turtle to rotate

        ###########################################

if __name__ == '__main__':
    try:
        move_turtle_in_square()
    except rospy.ROSInterruptException:
        pass
